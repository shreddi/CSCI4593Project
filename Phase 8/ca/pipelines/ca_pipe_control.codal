/**
 * Codasip s.r.o.
 *
 * CONFIDENTIAL
 *
 * Copyright 2022 Codasip s.r.o.
 *
 * All Rights Reserved.
 *
 * NOTICE: All information contained in this file, is and shall remain the property of
 * Codasip s.r.o. and its suppliers, if any.
 *
 * The intellectual and technical concepts contained herein are confidential and proprietary to
 * Codasip s.r.o. and are protected by trade secret and copyright law.  In addition, elements of the
 * technical concepts may be patent pending.
 *
 * This file is part of the Codasip Studio product. No part of the Studio product, including this
 * file, may be use, copied, modified, or distributed except in accordance with the terms contained
 * in Codasip license agreement under which you obtained this file.
 *
 *  \file   ca_pipe_control.codal
 *  \author Codasip
 *  \date   09.02.2022
 *  \brief  cycle accurate model
 */

#include "debug.hcodal"
#include "ca_defines.hcodal"

event pipeline_control : pipeline(pipe.MEM)
{
    semantics
    {
        if(s_me_take_branch){
            pipe.ID.clear();
            pipe.EX.clear();
            r_id_buffer_full = false;
        }else if(s_me_stall){
            //pipe.IF.stall();
            pipe.ID.stall();
            pipe.EX.stall();
            s_wb_stall = true;
            s_id_stall = true;
            r_id_buffer_full = true;
        }else if(s_id_loadhaz){
            pipe.IF.stall();
            pipe.ID.clear();
            //pipe.EX.clear();
            //s_wb_stall = false;
            //s_id_stall = true;
            r_id_buffer_full = true;
        }else{
            r_id_buffer_full = false;
        }
        // r_id_instr_preserved = true;
        // r_id_pc_preserved = true;
            
    };
};

